# -*- coding: utf-8 -*-
# Generated by Django 1.9.7 on 2017-07-15 14:23
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('customers', '0002_auto_20170715_1423'),
        ('taxes', '0002_auto_20170715_1255'),
        ('companies', '0001_initial'),
        ('inventories', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('active', models.BooleanField(default=True)),
                ('seq_number', models.PositiveIntegerField(help_text='Invoice number.')),
                ('date', models.DateField(help_text='Date of invoice generation.')),
                ('is_paid', models.BooleanField(default=False, help_text='Represents whether this invoice has been paid.')),
                ('pdf', models.FileField(blank=True, help_text='Rendered PDF version of invoice.', null=True, upload_to=b'')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invoices', to='companies.Company')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invoices', to='customers.Customer')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='InvoiceItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('active', models.BooleanField(default=True)),
                ('quantity', models.PositiveIntegerField(help_text='Quantity of item.')),
                ('discount', models.DecimalField(decimal_places=2, help_text='Amount of discount given on this item.', max_digits=16)),
                ('amount', models.DecimalField(decimal_places=2, help_text='Actual amount of this item.', max_digits=16)),
                ('total_amount', models.DecimalField(decimal_places=2, help_text='Total amount taken for this item.', max_digits=16)),
                ('invoice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='invoices.Invoice')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invoices', to='inventories.Item')),
            ],
        ),
        migrations.CreateModel(
            name='InvoiceItemTax',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('active', models.BooleanField(default=True)),
                ('percentage', models.DecimalField(decimal_places=2, help_text='Percentage of tax applied on the item.', max_digits=16)),
                ('amount', models.DecimalField(decimal_places=2, help_text='Actual amount of tax applied on the item.', max_digits=16)),
                ('invoice_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='taxes', to='invoices.InvoiceItem')),
                ('tax', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invoiced_items', to='taxes.Tax')),
            ],
        ),
        migrations.AlterUniqueTogether(
            name='invoiceitemtax',
            unique_together=set([('invoice_item', 'tax')]),
        ),
        migrations.AlterUniqueTogether(
            name='invoiceitem',
            unique_together=set([('invoice', 'item')]),
        ),
    ]
